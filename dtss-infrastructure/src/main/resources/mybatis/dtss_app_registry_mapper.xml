<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.df.dtss.gatewayimpl.database.AppRegistryMapper">

    <resultMap id="BaseResultMap" type="com.df.dtss.gatewayimpl.database.model.AppRegistry">
        <id column="id" jdbcType="BIGINT"  property="id" />
        <result column="registry_group" jdbcType="VARCHAR" property="registryGroup"/>
        <result column="registry_key" jdbcType="VARCHAR" property="registryKey"/>
        <result column="registry_value" jdbcType="VARCHAR" property="registryValue"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="edit_time" jdbcType="TIMESTAMP" property="editTime"/>
    </resultMap>

    <!-- 字段列表 -->
    <sql id="Base_Column_List">
        id,
            registry_group,
            registry_key,
            registry_value,
            create_time,
            edit_time
        </sql>

    <!-- 根据主键查询 -->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from dtss_app_registry
        where id = #{id}
    </select>

    <!-- 新增一条记录 -->
    <insert id="insert" parameterType="com.df.dtss.gatewayimpl.database.model.AppRegistry" useGeneratedKeys="true" keyProperty="id">
        insert into dtss_app_registry (<include refid="Base_Column_List" />)
        values(
        #{id, jdbcType=BIGINT},
            #{registryGroup, jdbcType=VARCHAR},
            #{registryKey, jdbcType=VARCHAR},
            #{registryValue, jdbcType=VARCHAR},
            now(),
            now()
            )
    </insert>

    <!-- 根据主键更新数据 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.df.dtss.gatewayimpl.database.model.AppRegistry">
        update dtss_app_registry
        <set>
            <if test="registryGroup != null">
                registry_group = #{registryGroup, jdbcType=VARCHAR},
            </if>
            <if test="registryKey != null">
                registry_key = #{registryKey, jdbcType=VARCHAR},
            </if>
            <if test="registryValue != null">
                registry_value = #{registryValue, jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="editTime != null">
                edit_time = #{editTime, jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id} limit 1
    </update>

    <!-- 等值查询条件 -->
    <sql id="Equal_Where_List">
        <if test="registryGroup != null">
            and registry_group = #{registryGroup, jdbcType=VARCHAR}
        </if>
        <if test="registryKey != null">
            and registry_key = #{registryKey, jdbcType=VARCHAR}
        </if>
        <if test="registryValue != null">
            and registry_value = #{registryValue, jdbcType=VARCHAR}
        </if>
    </sql>

    <!-- 范围查询条件，包括 <、 >、between、like、in等 -->
    <sql id="Range_Where_List">
        <if test="createTimeFrom != null">
            <![CDATA[
            and create_time >= #{createTimeFrom, jdbcType=TIMESTAMP}
            ]]>
        </if>
        <if test="createTimeTo != null">
            <![CDATA[
            and create_time <= #{createTimeTo, jdbcType=TIMESTAMP}
            ]]>
        </if>
        <if test="editTimeFrom != null">
            <![CDATA[
            and edit_time >= #{editTimeFrom, jdbcType=TIMESTAMP}
            ]]>
        </if>
        <if test="editTimeTo != null">
            <![CDATA[
            and edit_time <= #{editTimeTo, jdbcType=TIMESTAMP}
            ]]>
        </if>
    </sql>

    <!-- 上次查询Id最大值 -->
    <sql id="GtLastMaxId_Where">
        <if test="lastMaxId != null and lastMaxId > 0">
            and id > #{lastMaxId}
        </if>
    </sql>

     <!-- 排序条件 -->
    <sql id="Order_By">
        <if test="sorts != null and sorts.size > 0">
            ORDER BY
            <foreach collection="sorts" item="sortItem" separator=",">
                ${sortItem.column} ${sortItem.type.message}
            </foreach>
        </if>
    </sql>

    <!-- 根据查询参数查询数据 -->
    <select id="selectByCondition" parameterType="com.df.dtss.domain.query.AppRegistryQuery" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from dtss_app_registry
        <where>
            <include refid="Equal_Where_List"/>
            <include refid="Range_Where_List"/>
            <include refid="GtLastMaxId_Where" />
        </where>
        <include refid="Order_By"/>
        <if test="limit > 0">
            limit #{offset}, #{limit}
        </if>
    </select>

    <!-- 根据查询参数查询数据总量 -->
    <select id="countByCondition" parameterType="com.df.dtss.domain.query.AppRegistryQuery" resultType="java.lang.Integer">
        select count(1)
        from dtss_app_registry
        <where>
            <include refid="Equal_Where_List"/>
            <include refid="Range_Where_List"/>
        </where>
    </select>

    <!--批量查询-->
    <select id="selectByIds" parameterType="java.util.List" resultMap="BaseResultMap">
       select <include refid="Base_Column_List"/>
       from dtss_app_registry
       where id in
       <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}       </foreach>
    </select>


    <!--批量更新-->
    <select id="updateByIds" parameterType="map">
        update dtss_app_registry
        <set>
            <if test="record.registryGroup != null">
                registry_group = #{record.registryGroup, jdbcType=VARCHAR},
            </if>
            <if test="record.registryKey != null">
                registry_key = #{record.registryKey, jdbcType=VARCHAR},
            </if>
            <if test="record.registryValue != null">
                registry_value = #{record.registryValue, jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime, jdbcType=TIMESTAMP},
            </if>
            <if test="record.editTime != null">
                edit_time = #{record.editTime, jdbcType=TIMESTAMP},
            </if>
        </set>
        where id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
#{item}        </foreach>
    </select>

</mapper>